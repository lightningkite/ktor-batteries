"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.xPropChainRemoveKeys = exports.xPropChainModifyByKey = exports.xPropChainPlusMap = exports.xPropChainMapIf = exports.xPropChainMap = exports.xPropChainDropFirst = exports.xPropChainDropLast = exports.xPropChainRemoveList = exports.xPropChainRemoveAll = exports.xPropChainAddUnique = exports.xPropChainAddAll = exports.xPropChainPlusItem = exports.xPropChainPlusItems = exports.xPropChainPlusString = exports.xPropChainTimes = exports.xPropChainPlusNumber = exports.xPropChainCoerceAtLeast = exports.xPropChainCoerceAtMost = exports.xPropChainAssign = exports.xPropChainModification = exports.xPropChainCondition = exports.xPropChainGet = exports.xPropChainNotNullGet = exports.xPropChainContainsKey = exports.xPropChainSizesEquals = exports.xPropChainAny = exports.xPropChainAll = exports.xPropChainContainsCased = exports.xPropChainContains = exports.xPropChainAnySet = exports.xPropChainAnyClear = exports.xPropChainAllSet = exports.xPropChainAllClear = exports.xPropChainLte = exports.xPropChainGte = exports.xPropChainLt = exports.xPropChainGt = exports.xPropChainNotIn = exports.xPropChainNin = exports.xPropChainInside = exports.xPropChainNe = exports.xPropChainNeq = exports.xPropChainEq = exports.xPropChainNeverGet = exports.xPropChainAlwaysGet = exports.modification = exports.condition = exports.PropChain = exports.startChain = void 0;
// Package: com.lightningkite.ktordb
// Generated by Khrysalis - this file will be overwritten.
const Condition_1 = require("./Condition");
const Modification_1 = require("./Modification");
const khrysalis_runtime_1 = require("@lightningkite/khrysalis-runtime");
const iter_tools_es_1 = require("iter-tools-es");
//! Declares com.lightningkite.ktordb.startChain
function startChain() {
    return new PropChain((it) => (it), (it) => (it));
}
exports.startChain = startChain;
//! Declares com.lightningkite.ktordb.PropChain
class PropChain {
    constructor(mapCondition, mapModification) {
        this.mapCondition = mapCondition;
        this.mapModification = mapModification;
    }
    get(prop) {
        return new PropChain((it) => (this.mapCondition(new Condition_1.Condition.OnField(prop, it))), (it) => (this.mapModification(new Modification_1.Modification.OnField(prop, it))));
    }
    hashCode() {
        return this.mapCondition(new Condition_1.Condition.Always()).hashCode();
    }
    toString() {
        return `PropChain(${this.mapCondition(new Condition_1.Condition.Always())})`;
    }
    equals(other) {
        return other instanceof PropChain && (0, khrysalis_runtime_1.safeEq)(this.mapCondition(new Condition_1.Condition.Always()), other.mapCondition(new Condition_1.Condition.Always()));
    }
}
exports.PropChain = PropChain;
//! Declares com.lightningkite.ktordb.condition
function condition(setup) {
    return (setup)(startChain());
}
exports.condition = condition;
//! Declares com.lightningkite.ktordb.modification
function modification(setup) {
    return (setup)(startChain());
}
exports.modification = modification;
//! Declares com.lightningkite.ktordb.always>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.always.K, com.lightningkite.ktordb.always.K
function xPropChainAlwaysGet(this_) { return new Condition_1.Condition.Always(); }
exports.xPropChainAlwaysGet = xPropChainAlwaysGet;
//! Declares com.lightningkite.ktordb.never>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.never.K, com.lightningkite.ktordb.never.K
function xPropChainNeverGet(this_) { return new Condition_1.Condition.Never(); }
exports.xPropChainNeverGet = xPropChainNeverGet;
//! Declares com.lightningkite.ktordb.eq>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.eq.K, com.lightningkite.ktordb.eq.T
function xPropChainEq(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.Equal(value));
}
exports.xPropChainEq = xPropChainEq;
//! Declares com.lightningkite.ktordb.neq>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.neq.K, com.lightningkite.ktordb.neq.T
function xPropChainNeq(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.NotEqual(value));
}
exports.xPropChainNeq = xPropChainNeq;
//! Declares com.lightningkite.ktordb.ne>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.ne.K, com.lightningkite.ktordb.ne.T
function xPropChainNe(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.NotEqual(value));
}
exports.xPropChainNe = xPropChainNe;
//! Declares com.lightningkite.ktordb.inside>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.inside.K, com.lightningkite.ktordb.inside.T
function xPropChainInside(this_, values) {
    return this_.mapCondition(new Condition_1.Condition.Inside(values));
}
exports.xPropChainInside = xPropChainInside;
//! Declares com.lightningkite.ktordb.nin>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.nin.K, com.lightningkite.ktordb.nin.T
function xPropChainNin(this_, values) {
    return this_.mapCondition(new Condition_1.Condition.NotInside(values));
}
exports.xPropChainNin = xPropChainNin;
//! Declares com.lightningkite.ktordb.notIn>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.notIn.K, com.lightningkite.ktordb.notIn.T
function xPropChainNotIn(this_, values) {
    return this_.mapCondition(new Condition_1.Condition.NotInside(values));
}
exports.xPropChainNotIn = xPropChainNotIn;
//! Declares com.lightningkite.ktordb.gt>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.gt.K, com.lightningkite.ktordb.gt.T
function xPropChainGt(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.GreaterThan(value));
}
exports.xPropChainGt = xPropChainGt;
//! Declares com.lightningkite.ktordb.lt>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.lt.K, com.lightningkite.ktordb.lt.T
function xPropChainLt(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.LessThan(value));
}
exports.xPropChainLt = xPropChainLt;
//! Declares com.lightningkite.ktordb.gte>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.gte.K, com.lightningkite.ktordb.gte.T
function xPropChainGte(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.GreaterThanOrEqual(value));
}
exports.xPropChainGte = xPropChainGte;
//! Declares com.lightningkite.ktordb.lte>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.lte.K, com.lightningkite.ktordb.lte.T
function xPropChainLte(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.LessThanOrEqual(value));
}
exports.xPropChainLte = xPropChainLte;
//! Declares com.lightningkite.ktordb.allClear>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.allClear.K, kotlin.Int
function xPropChainAllClear(this_, mask) {
    return this_.mapCondition(new Condition_1.Condition.IntBitsClear(mask));
}
exports.xPropChainAllClear = xPropChainAllClear;
//! Declares com.lightningkite.ktordb.allSet>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.allSet.K, kotlin.Int
function xPropChainAllSet(this_, mask) {
    return this_.mapCondition(new Condition_1.Condition.IntBitsSet(mask));
}
exports.xPropChainAllSet = xPropChainAllSet;
//! Declares com.lightningkite.ktordb.anyClear>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.anyClear.K, kotlin.Int
function xPropChainAnyClear(this_, mask) {
    return this_.mapCondition(new Condition_1.Condition.IntBitsAnyClear(mask));
}
exports.xPropChainAnyClear = xPropChainAnyClear;
//! Declares com.lightningkite.ktordb.anySet>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.anySet.K, kotlin.Int
function xPropChainAnySet(this_, mask) {
    return this_.mapCondition(new Condition_1.Condition.IntBitsAnySet(mask));
}
exports.xPropChainAnySet = xPropChainAnySet;
//! Declares com.lightningkite.ktordb.contains>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.contains.K, kotlin.String
function xPropChainContains(this_, value) {
    return this_.mapCondition(new Condition_1.Condition.Search(value, true));
}
exports.xPropChainContains = xPropChainContains;
//! Declares com.lightningkite.ktordb.contains>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.contains.K, kotlin.String
function xPropChainContainsCased(this_, value, ignoreCase) {
    return this_.mapCondition(new Condition_1.Condition.Search(value, ignoreCase));
}
exports.xPropChainContainsCased = xPropChainContainsCased;
//! Declares com.lightningkite.ktordb.all>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.all.K, kotlin.collections.Listcom.lightningkite.ktordb.all.T
function xPropChainAll(this_, condition) {
    return this_.mapCondition(new Condition_1.Condition.AllElements((condition)(startChain())));
}
exports.xPropChainAll = xPropChainAll;
//! Declares com.lightningkite.ktordb.any>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.any.K, kotlin.collections.Listcom.lightningkite.ktordb.any.T
function xPropChainAny(this_, condition) {
    return this_.mapCondition(new Condition_1.Condition.AnyElements((condition)(startChain())));
}
exports.xPropChainAny = xPropChainAny;
//! Declares com.lightningkite.ktordb.sizesEquals>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.sizesEquals.K, kotlin.collections.Listcom.lightningkite.ktordb.sizesEquals.T
function xPropChainSizesEquals(this_, count) {
    return this_.mapCondition(new Condition_1.Condition.SizesEquals(count));
}
exports.xPropChainSizesEquals = xPropChainSizesEquals;
//! Declares com.lightningkite.ktordb.containsKey>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.containsKey.K, kotlin.collections.Mapkotlin.String, com.lightningkite.ktordb.containsKey.T
function xPropChainContainsKey(this_, key) {
    return this_.mapCondition(new Condition_1.Condition.Exists(key));
}
exports.xPropChainContainsKey = xPropChainContainsKey;
//! Declares com.lightningkite.ktordb.notNull>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.notNull.K, com.lightningkite.ktordb.notNull.T
function xPropChainNotNullGet(this_) { return new PropChain((it) => (this_.mapCondition(new Condition_1.Condition.IfNotNull(it))), (it) => (this_.mapModification(new Modification_1.Modification.IfNotNull(it)))); }
exports.xPropChainNotNullGet = xPropChainNotNullGet;
//! Declares com.lightningkite.ktordb.get>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.get.K, kotlin.collections.Mapkotlin.String, com.lightningkite.ktordb.get.T
function xPropChainGet(this_, key) {
    return new PropChain((it) => (this_.mapCondition(new Condition_1.Condition.OnKey(key, it))), (it) => (this_.mapModification(new Modification_1.Modification.ModifyByKey(new Map([[key, it]])))));
}
exports.xPropChainGet = xPropChainGet;
//! Declares com.lightningkite.ktordb.condition>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.condition.K, com.lightningkite.ktordb.condition.T
function xPropChainCondition(this_, make) {
    return this_.mapCondition(make(startChain()));
}
exports.xPropChainCondition = xPropChainCondition;
//! Declares com.lightningkite.ktordb.modification>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.modification.K, com.lightningkite.ktordb.modification.T
function xPropChainModification(this_, make) {
    return this_.mapModification(make(startChain()));
}
exports.xPropChainModification = xPropChainModification;
//! Declares com.lightningkite.ktordb.assign>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.assign.K, com.lightningkite.ktordb.assign.T
function xPropChainAssign(this_, value) {
    return this_.mapModification(new Modification_1.Modification.Assign(value));
}
exports.xPropChainAssign = xPropChainAssign;
//! Declares com.lightningkite.ktordb.coerceAtMost>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.coerceAtMost.K, com.lightningkite.ktordb.coerceAtMost.T
function xPropChainCoerceAtMost(this_, value) {
    return this_.mapModification(new Modification_1.Modification.CoerceAtMost(value));
}
exports.xPropChainCoerceAtMost = xPropChainCoerceAtMost;
//! Declares com.lightningkite.ktordb.coerceAtLeast>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.coerceAtLeast.K, com.lightningkite.ktordb.coerceAtLeast.T
function xPropChainCoerceAtLeast(this_, value) {
    return this_.mapModification(new Modification_1.Modification.CoerceAtLeast(value));
}
exports.xPropChainCoerceAtLeast = xPropChainCoerceAtLeast;
//! Declares com.lightningkite.ktordb.plus>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.plus.K, com.lightningkite.ktordb.plus.T
function xPropChainPlusNumber(this_, by) {
    return this_.mapModification(new Modification_1.Modification.Increment(by));
}
exports.xPropChainPlusNumber = xPropChainPlusNumber;
//! Declares com.lightningkite.ktordb.times>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.times.K, com.lightningkite.ktordb.times.T
function xPropChainTimes(this_, by) {
    return this_.mapModification(new Modification_1.Modification.Multiply(by));
}
exports.xPropChainTimes = xPropChainTimes;
//! Declares com.lightningkite.ktordb.plus>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.plus.K, kotlin.String
function xPropChainPlusString(this_, value) {
    return this_.mapModification(new Modification_1.Modification.AppendString(value));
}
exports.xPropChainPlusString = xPropChainPlusString;
//! Declares com.lightningkite.ktordb.plus>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.plus.K, kotlin.collections.Listcom.lightningkite.ktordb.plus.T
function xPropChainPlusItems(this_, items) {
    return this_.mapModification(new Modification_1.Modification.AppendList(items));
}
exports.xPropChainPlusItems = xPropChainPlusItems;
//! Declares com.lightningkite.ktordb.plus>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.plus.K, kotlin.collections.Listcom.lightningkite.ktordb.plus.T
function xPropChainPlusItem(this_, item) {
    return this_.mapModification(new Modification_1.Modification.AppendList([item]));
}
exports.xPropChainPlusItem = xPropChainPlusItem;
//! Declares com.lightningkite.ktordb.addAll>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.addAll.K, kotlin.collections.Listcom.lightningkite.ktordb.addAll.T
function xPropChainAddAll(this_, items) {
    return this_.mapModification(new Modification_1.Modification.AppendList(items));
}
exports.xPropChainAddAll = xPropChainAddAll;
//! Declares com.lightningkite.ktordb.addUnique>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.addUnique.K, kotlin.collections.Listcom.lightningkite.ktordb.addUnique.T
function xPropChainAddUnique(this_, items) {
    return this_.mapModification(new Modification_1.Modification.AppendSet(items));
}
exports.xPropChainAddUnique = xPropChainAddUnique;
//! Declares com.lightningkite.ktordb.removeAll>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.removeAll.K, kotlin.collections.Listcom.lightningkite.ktordb.removeAll.T
function xPropChainRemoveAll(this_, condition) {
    return this_.mapModification(new Modification_1.Modification.Remove((condition)(startChain())));
}
exports.xPropChainRemoveAll = xPropChainRemoveAll;
//! Declares com.lightningkite.ktordb.removeAll>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.removeAll.K, kotlin.collections.Listcom.lightningkite.ktordb.removeAll.T
function xPropChainRemoveList(this_, items) {
    return this_.mapModification(new Modification_1.Modification.RemoveInstances(items));
}
exports.xPropChainRemoveList = xPropChainRemoveList;
//! Declares com.lightningkite.ktordb.dropLast>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.dropLast.K, kotlin.collections.Listcom.lightningkite.ktordb.dropLast.T
function xPropChainDropLast(this_) {
    return this_.mapModification(new Modification_1.Modification.DropLast());
}
exports.xPropChainDropLast = xPropChainDropLast;
//! Declares com.lightningkite.ktordb.dropFirst>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.dropFirst.K, kotlin.collections.Listcom.lightningkite.ktordb.dropFirst.T
function xPropChainDropFirst(this_) {
    return this_.mapModification(new Modification_1.Modification.DropFirst());
}
exports.xPropChainDropFirst = xPropChainDropFirst;
//! Declares com.lightningkite.ktordb.map>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.map.K, kotlin.collections.Listcom.lightningkite.ktordb.map.T
function xPropChainMap(this_, modification) {
    return this_.mapModification(new Modification_1.Modification.PerElement(new Condition_1.Condition.Always(), (modification)(startChain())));
}
exports.xPropChainMap = xPropChainMap;
//! Declares com.lightningkite.ktordb.mapIf>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.mapIf.K, kotlin.collections.Listcom.lightningkite.ktordb.mapIf.T
function xPropChainMapIf(this_, condition, modification) {
    return this_.mapModification(new Modification_1.Modification.PerElement((condition)(startChain()), (modification)(startChain())));
}
exports.xPropChainMapIf = xPropChainMapIf;
//! Declares com.lightningkite.ktordb.plus>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.plus.K, kotlin.collections.Mapkotlin.String, com.lightningkite.ktordb.plus.T
function xPropChainPlusMap(this_, map) {
    return this_.mapModification(new Modification_1.Modification.Combine(map));
}
exports.xPropChainPlusMap = xPropChainPlusMap;
//! Declares com.lightningkite.ktordb.modifyByKey>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.modifyByKey.K, kotlin.collections.Mapkotlin.String, com.lightningkite.ktordb.modifyByKey.T
function xPropChainModifyByKey(this_, map) {
    return this_.mapModification(new Modification_1.Modification.ModifyByKey(new Map((0, iter_tools_es_1.map)(x => [x[0], ((it) => ((it[1])(startChain())))(x)], map.entries()))));
}
exports.xPropChainModifyByKey = xPropChainModifyByKey;
//! Declares com.lightningkite.ktordb.removeKeys>com.lightningkite.ktordb.PropChaincom.lightningkite.ktordb.removeKeys.K, kotlin.collections.Mapkotlin.String, com.lightningkite.ktordb.removeKeys.T
function xPropChainRemoveKeys(this_, fields) {
    return this_.mapModification(new Modification_1.Modification.RemoveKeys(fields));
}
exports.xPropChainRemoveKeys = xPropChainRemoveKeys;
//# sourceMappingURL=dsl.js.map