"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Condition = void 0;
// Package: com.lightningkite.ktordb
// Generated by Khrysalis - this file will be overwritten.
const DataClassProperty_1 = require("./DataClassProperty");
const khrysalis_runtime_1 = require("@lightningkite/khrysalis-runtime");
//! Declares com.lightningkite.ktordb.Condition
class Condition {
    constructor() {
    }
    hashCode() { throw undefined; }
    equals(other) { throw undefined; }
    invoke(on) { throw undefined; }
    and(other) {
        return new Condition.And([this, other]);
    }
    or(other) {
        return new Condition.Or([this, other]);
    }
    not() {
        return new Condition.Not(this);
    }
}
exports.Condition = Condition;
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Never
    class Never extends Condition {
        constructor() {
            super();
        }
        invoke(on) {
            return false;
        }
        hashCode() {
            return 0;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Condition.Never)) !== null;
        }
    }
    Condition.Never = Never;
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Always
    class Always extends Condition {
        constructor() {
            super();
        }
        invoke(on) {
            return true;
        }
        hashCode() {
            return 1;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Condition.Always)) !== null;
        }
    }
    Condition.Always = Always;
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.And
    class And extends Condition {
        constructor(conditions) {
            super();
            this.conditions = conditions;
        }
        static propertyTypes(T) { return { conditions: [Array, [Condition, T]] }; }
        invoke(on) {
            return this.conditions.every((it) => (it.invoke(on)));
        }
    }
    And.properties = ["conditions"];
    Condition.And = And;
    (0, khrysalis_runtime_1.setUpDataClass)(And);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Or
    class Or extends Condition {
        constructor(conditions) {
            super();
            this.conditions = conditions;
        }
        static propertyTypes(T) { return { conditions: [Array, [Condition, T]] }; }
        invoke(on) {
            return this.conditions.some((it) => (it.invoke(on)));
        }
    }
    Or.properties = ["conditions"];
    Condition.Or = Or;
    (0, khrysalis_runtime_1.setUpDataClass)(Or);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Not
    class Not extends Condition {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(T) { return { condition: [Condition, T] }; }
        invoke(on) {
            return (!this.condition.invoke(on));
        }
    }
    Not.properties = ["condition"];
    Condition.Not = Not;
    (0, khrysalis_runtime_1.setUpDataClass)(Not);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Equal
    class Equal extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.safeEq)(on, this.value);
        }
    }
    Equal.properties = ["value"];
    Condition.Equal = Equal;
    (0, khrysalis_runtime_1.setUpDataClass)(Equal);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.NotEqual
    class NotEqual extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return !(0, khrysalis_runtime_1.safeEq)(on, this.value);
        }
    }
    NotEqual.properties = ["value"];
    Condition.NotEqual = NotEqual;
    (0, khrysalis_runtime_1.setUpDataClass)(NotEqual);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Inside
    class Inside extends Condition {
        constructor(values) {
            super();
            this.values = values;
        }
        static propertyTypes(T) { return { values: [Array, T] }; }
        invoke(on) {
            return this.values.some((x) => (0, khrysalis_runtime_1.safeEq)(on, x));
        }
    }
    Inside.properties = ["values"];
    Condition.Inside = Inside;
    (0, khrysalis_runtime_1.setUpDataClass)(Inside);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.NotInside
    class NotInside extends Condition {
        constructor(values) {
            super();
            this.values = values;
        }
        static propertyTypes(T) { return { values: [Array, T] }; }
        invoke(on) {
            return (!this.values.some((x) => (0, khrysalis_runtime_1.safeEq)(on, x)));
        }
    }
    NotInside.properties = ["values"];
    Condition.NotInside = NotInside;
    (0, khrysalis_runtime_1.setUpDataClass)(NotInside);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.GreaterThan
    class GreaterThan extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.safeCompare)(on, this.value) > 0;
        }
    }
    GreaterThan.properties = ["value"];
    Condition.GreaterThan = GreaterThan;
    (0, khrysalis_runtime_1.setUpDataClass)(GreaterThan);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.LessThan
    class LessThan extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.safeCompare)(on, this.value) < 0;
        }
    }
    LessThan.properties = ["value"];
    Condition.LessThan = LessThan;
    (0, khrysalis_runtime_1.setUpDataClass)(LessThan);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.GreaterThanOrEqual
    class GreaterThanOrEqual extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.safeCompare)(on, this.value) >= 0;
        }
    }
    GreaterThanOrEqual.properties = ["value"];
    Condition.GreaterThanOrEqual = GreaterThanOrEqual;
    (0, khrysalis_runtime_1.setUpDataClass)(GreaterThanOrEqual);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.LessThanOrEqual
    class LessThanOrEqual extends Condition {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.safeCompare)(on, this.value) <= 0;
        }
    }
    LessThanOrEqual.properties = ["value"];
    Condition.LessThanOrEqual = LessThanOrEqual;
    (0, khrysalis_runtime_1.setUpDataClass)(LessThanOrEqual);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Search
    class Search extends Condition {
        constructor(value, ignoreCase) {
            super();
            this.value = value;
            this.ignoreCase = ignoreCase;
        }
        static propertyTypes() { return { value: [String], ignoreCase: [Boolean] }; }
        invoke(on) {
            return (on.toLowerCase().indexOf(this.value.toLowerCase()) != -1);
        }
    }
    Search.properties = ["value", "ignoreCase"];
    Condition.Search = Search;
    (0, khrysalis_runtime_1.setUpDataClass)(Search);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.IntBitsClear
    class IntBitsClear extends Condition {
        constructor(mask) {
            super();
            this.mask = mask;
        }
        static propertyTypes() { return { mask: [Number] }; }
        invoke(on) {
            return (on & this.mask) === 0;
        }
    }
    IntBitsClear.properties = ["mask"];
    Condition.IntBitsClear = IntBitsClear;
    (0, khrysalis_runtime_1.setUpDataClass)(IntBitsClear);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.IntBitsSet
    class IntBitsSet extends Condition {
        constructor(mask) {
            super();
            this.mask = mask;
        }
        static propertyTypes() { return { mask: [Number] }; }
        invoke(on) {
            return (on & this.mask) === this.mask;
        }
    }
    IntBitsSet.properties = ["mask"];
    Condition.IntBitsSet = IntBitsSet;
    (0, khrysalis_runtime_1.setUpDataClass)(IntBitsSet);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.IntBitsAnyClear
    class IntBitsAnyClear extends Condition {
        constructor(mask) {
            super();
            this.mask = mask;
        }
        static propertyTypes() { return { mask: [Number] }; }
        invoke(on) {
            return (on & this.mask) < this.mask;
        }
    }
    IntBitsAnyClear.properties = ["mask"];
    Condition.IntBitsAnyClear = IntBitsAnyClear;
    (0, khrysalis_runtime_1.setUpDataClass)(IntBitsAnyClear);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.IntBitsAnySet
    class IntBitsAnySet extends Condition {
        constructor(mask) {
            super();
            this.mask = mask;
        }
        static propertyTypes() { return { mask: [Number] }; }
        invoke(on) {
            return (on & this.mask) > 0;
        }
    }
    IntBitsAnySet.properties = ["mask"];
    Condition.IntBitsAnySet = IntBitsAnySet;
    (0, khrysalis_runtime_1.setUpDataClass)(IntBitsAnySet);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.AllElements
    class AllElements extends Condition {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(E) { return { condition: [Condition, E] }; }
        invoke(on) {
            return on.every((it) => (this.condition.invoke(it)));
        }
    }
    AllElements.properties = ["condition"];
    Condition.AllElements = AllElements;
    (0, khrysalis_runtime_1.setUpDataClass)(AllElements);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.AnyElements
    class AnyElements extends Condition {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(E) { return { condition: [Condition, E] }; }
        invoke(on) {
            return on.some((it) => (this.condition.invoke(it)));
        }
    }
    AnyElements.properties = ["condition"];
    Condition.AnyElements = AnyElements;
    (0, khrysalis_runtime_1.setUpDataClass)(AnyElements);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.SizesEquals
    class SizesEquals extends Condition {
        constructor(count) {
            super();
            this.count = count;
        }
        static propertyTypes(E) { return { count: [Number] }; }
        invoke(on) {
            return on.length === this.count;
        }
    }
    SizesEquals.properties = ["count"];
    Condition.SizesEquals = SizesEquals;
    (0, khrysalis_runtime_1.setUpDataClass)(SizesEquals);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.Exists
    class Exists extends Condition {
        constructor(key) {
            super();
            this.key = key;
        }
        static propertyTypes(V) { return { key: [String] }; }
        invoke(on) {
            return on.has(this.key);
        }
    }
    Exists.properties = ["key"];
    Condition.Exists = Exists;
    (0, khrysalis_runtime_1.setUpDataClass)(Exists);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.OnKey
    class OnKey extends Condition {
        constructor(key, condition) {
            super();
            this.key = key;
            this.condition = condition;
        }
        static propertyTypes(V) { return { key: [String], condition: [Condition, V] }; }
        invoke(on) {
            var _a;
            return on.has(this.key) && this.condition.invoke(((_a = on.get(this.key)) !== null && _a !== void 0 ? _a : null));
        }
    }
    OnKey.properties = ["key", "condition"];
    Condition.OnKey = OnKey;
    (0, khrysalis_runtime_1.setUpDataClass)(OnKey);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.OnField
    class OnField extends Condition {
        constructor(key, condition) {
            super();
            this.key = key;
            this.condition = condition;
        }
        static propertyTypes(K, V) { return { key: [String, K, V], condition: [Condition, V] }; }
        invoke(on) {
            return this.condition.invoke((0, DataClassProperty_1.keyGet)(on, this.key));
        }
    }
    OnField.properties = ["key", "condition"];
    Condition.OnField = OnField;
    (0, khrysalis_runtime_1.setUpDataClass)(OnField);
})(Condition = exports.Condition || (exports.Condition = {}));
(function (Condition) {
    //! Declares com.lightningkite.ktordb.Condition.IfNotNull
    class IfNotNull extends Condition {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(T) { return { condition: [Condition, T] }; }
        invoke(on) {
            return on !== null && this.condition.invoke(on);
        }
    }
    IfNotNull.properties = ["condition"];
    Condition.IfNotNull = IfNotNull;
    (0, khrysalis_runtime_1.setUpDataClass)(IfNotNull);
})(Condition = exports.Condition || (exports.Condition = {}));
//# sourceMappingURL=Condition.js.map