// Package: com.lightningkite.ktordb.live
// Generated by Khrysalis - this file will be overwritten.
import { HasId } from '../HasId'
import { Query } from '../Query'
import { ReadModelApi } from '../ReadModelApi'
import { UUIDFor } from '../UUIDFor'
import { ReifiedType } from '@lightningkite/khrysalis-runtime'
import { HttpBody, HttpClient, fromJSON, unsuccessfulAsError } from '@lightningkite/rxjs-plus'
import { Observable } from 'rxjs'

//! Declares com.lightningkite.ktordb.live.LiveReadModelApi
export class LiveReadModelApi<Model extends HasId> extends ReadModelApi<Model> {
    public constructor(public readonly url: string, public readonly token: string, public readonly serializer: ReifiedType) {
        super();
    }
    
    
    public list(query: Query<Model>): Observable<Array<Model>> {
        return HttpClient.INSTANCE.call(`${this.url}/query`, HttpClient.INSTANCE.POST, new Map([["Authorization", `Bearer ${this.token}`]]), HttpBody.json(query), undefined).pipe(unsuccessfulAsError, fromJSON<Array<Model>>([Array, this.serializer]));
    }
    
    
    public get(id: UUIDFor<Model>): Observable<Model> {
        return HttpClient.INSTANCE.call(`${this.url}/${id}`, HttpClient.INSTANCE.GET, new Map([["Authorization", `Bearer ${this.token}`]]), undefined, undefined).pipe(unsuccessfulAsError, fromJSON<Model>(this.serializer));
    }
    
}

